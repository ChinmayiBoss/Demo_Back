name: Deploy Node.js Backend via VPN with Failover

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Setup VPN with Failover
        run: |
          sudo apt-get update
          sudo apt-get install -y openvpn
          echo -e "${{ secrets.VPN_USER }}\n${{ secrets.VPN_PASSWORD }}" > vpn-auth.txt
          chmod 600 vpn-auth.txt
          echo "${{ secrets.VPN_OFFICE2 }}" | base64 -d > vpn_primary.ovpn
          echo "Connecting to Office2 VPN..."
          sudo openvpn --config vpn_primary.ovpn --auth-user-pass vpn-auth.txt --daemon
          sleep 10 

          if ip addr show tun0 >/dev/null 2>&1; then
          echo "Office2 VPN connected"
          else  
          echo "Office2 VPN failed, switching to Office1..."
          sudo pkill openvpn || true
          echo "${{ secrets.VPN_OFFICE1 }}" | base64 -d > vpn_failover.ovpn
          sudo openvpn --config vpn_failover.ovpn --auth-user-pass vpn-auth.txt --daemon
          sleep 10
          ip addr show tun0 >/dev/null 2>&1 || { echo "Failover Office1 VPN also failed"; exit 1; }
          echo "Office1 VPN connected"
          fi

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            cd /home/ubuntu/Demo_Back
            git fetch --all
            git reset --hard origin/main
            npm install
            pm2 restart Demobackend || pm2 start index.js --name Demobackend
            pm2 save
            sudo systemctl restart nginx
